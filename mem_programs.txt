// DATA section
00 00 00 00 //   0
00 01 00 01 //   4: Buffer start ptr of the buffer_sum program
00 02 00 02 //   8: Buffer start ptr for buffer a of mem_copy program
00 03 00 03 //   C: Buffer start ptr for buffer b of mem_copy program
00 00 00 00 //  10
00 01 00 01 //  14
00 02 00 02 //  18
00 03 00 03 //  1C
// Code section

// Buffer_sum program
08 00 02 13 //  20: addi x4, x0, 128 (i = 128)
00 00 00 93 //  24: addi x1, x0, 0   (sum = 0)
00 40 21 03 //  28: lw x2, 4(x0)     (a = M[4])
00 01 21 83 //  2C: lw x3, 0(x2)     (tmp = M[a])
00 30 80 b3 //  30: add x1, x1, x3   (sum = sum + tmp)
00 41 01 13 //  34: addi x2, x2, 4   (a = a + 4)
ff f2 02 13 //  38: addi x4, x4, -1  (i = i - 1)
fe 02 18 e3 //  3C: bne x4, x0, -16
00 00 00 63 //  40: beq x0, x0, 0    ("hlt")

// Mem_copy program
00 00 00 93 //  44: addi x1, x0, 0  (i = 0)
08 00 01 13 //  48: addi x2, x0, 128
00 50 02 13 //  4C: addi x4, x0, 5
00 80 21 83 //  50: lw x3, 8(x0)
00 41 a0 23 //  54: sw x4, 0(x3)
00 41 81 93 //  58: addi x3, x3, 4
00 10 80 93 //  5C: addi x1, x1, 1
fe 20 98 e3 //  60: bne x1, x2, -16
00 00 00 93 //  64: addi x1, x0, 0  (i = 0)
00 80 21 83 //  68: lw x3, 8(x0)
00 c0 22 83 //  6C: lw x5, 12(x0)
00 01 a2 03 //  70: lw x4, 0(x3)
00 42 a0 23 //  74: sw x4, 0(x5)
00 41 81 93 //  78: addi x3, x3, 4
00 42 82 93 //  7C: addi x5, x5, 4
00 10 80 93 //  80: addi x1, x1, 1
fe 20 98 e3 //  84: bne x1, x2, -20
00 00 00 63 //  88: beq x0,x0,0

// TEST BYPASS FROM MEM TO MEM -> LW x2,0(x1) ST x2,0(x12)
00 c0 00 93 // addi x1, x0,12 // read pointer 5c
00 00 06 13 // addi x12,x0,0 // write pointer 60 
00 00 a1 03 // 64 lw x2,0(x1)                   
00 26 20 23 // 68 sw x2,0(x12)
00 40 a1 03 // 6c lw x2,4(x1)
00 26 22 23 // 70 sw x2,4(x12)
00 80 a1 03 // 74 lw x2,8(x1)
00 26 24 23 // 78 sw x2,8(x12)
